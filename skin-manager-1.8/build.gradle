buildscript {
    repositories {
        jcenter()
        mavenCentral()

        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'

configurations {
    provided
    compile.extendsFrom provided
}

shadowJar {
    configurations = [project.configurations.shadow]
    archiveName 'HDSkins-1.8.jar'

    exclude 'com/google/gson/**'
    exclude 'net/labymod/**'
    exclude 'net/jpountz/**'
    exclude 'assets/minecraft/labymod/**'
    exclude 'BytecodeMethods.class'
    exclude 'dummyThing'
    exclude 'mcmod.info'
}

compileJava.doFirst {
    // Copy the shared source files between minecraft 1.8 and up
    copy {
        from './../skin-manager-shared/src/main/java'
        into './build/sources/main/java'
    }
    // Copy the shared resources files between minecraft 1.8 and up
    copy {
        from './../skin-manager-shared/src/main/resources'
        into './build/resources/main'
    }
    // Copy the source files which are created in the module
    copy {
        from './src/main/java'
        into './build/sources/main/java'
    }
    // Copy the resource files which are created in the module
    copy {
        from './src/main/resources'
        into './build/resources/main'
    }
}

minecraft {
    version = "1.8.9-11.15.1.1855"
    runDir = "run"
    mappings = "stable_20"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

repositories {
    maven {
        name 'jitpack.io'
        url 'https://jitpack.io'
    }
    maven {
        name 'HDSkins'
        url 'https://repo.hdskins.de'
    }
}

dependencies {
    compileOnly project(':skin-manager-shared')
    compileOnly files('../libs/lm_api.jar')
    shadow group: 'com.github.derklaro', name: 'requestbuilder', version: dependencyRequestBuilderVersion
    shadow group: 'de.hdskins.protocol', name: 'client', version: dependencyNetworkClientVersion
}

reobf {
    jar {
        setMappingType(net.minecraftforge.gradle.user.ReobfMappingType.NOTCH)
    }
}

artifacts {
    archives shadowJar
}

shadowJar.doLast {
    copy {
        from './build/libs/HDSkins-1.8.jar'
        into '../build/libs'
    }

    delete fileTree('../build/libs') {
        include 'skin-manager-root-*.jar'
    }
}
